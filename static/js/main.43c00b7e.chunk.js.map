{"version":3,"sources":["component/Container.jsx","component/FilterInput.jsx","component/Table.jsx","component/Jumbotron.jsx","App.jsx","utils/API.jsx","reportWebVitals.js","index.js"],"names":["Container","props","className","fluid","children","FilterInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Table","dark","sortedUsers","updateSortedUsers","scope","onClick","updateSort","sort","a","b","nameA","nameB","last","map","location","city","state","country","postcode","thumbnail","picture","cell","phone","gender","email","title","src","pStyle","color","Jumbotronheader","Jumbotron","style","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43c00b7e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div className={`container${props.fluid ? '-fluid' : ''}`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst FilterInput = ({ users, updateUsers }) => {\r\n    const [inputValue, updateInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredUsers =\r\n            inputValue === ''\r\n                ? users\r\n                : users.filter(\r\n                    ({ name: { first } }) =>\r\n                        first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\r\n                );\r\n\r\n        updateUsers(filteredUsers);\r\n    }, [inputValue, users]);\r\n\r\n    return (\r\n        <input value={inputValue} onChange={(e) => updateInput(e.target.value)} />\r\n    );\r\n};\r\n\r\nexport default FilterInput","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState, useEffect } from 'react';\r\n// create state for sorted users and function to update\r\nconst Table = ({ users, dark }) => {\r\n    const [sortedUsers, updateSortedUsers] = useState([]);\r\n\r\n    useEffect(() => updateSortedUsers(users), [users]);\r\n\r\n    return (\r\n        <div className='mt-2'>\r\n            <table className='table'>\r\n                <thead className={`${dark ? 'thead-dark' : ''}`}>\r\n                    <tr>\r\n                        <th scope='col'>picture</th>\r\n                        <th scope='col'>title</th>\r\n                        <th\r\n                            scope='col'\r\n                            onClick={() => {\r\n                                const usersCopy = [...users];\r\n                                const updateSort = usersCopy.sort((a, b) => {\r\n                                    const nameA = a.name.first;\r\n                                    const nameB = b.name.first;\r\n\r\n                                    if (nameA < nameB) {\r\n                                        return -1;\r\n                                    }\r\n                                    if (nameA > nameB) {\r\n                                        return 1;\r\n                                    }\r\n\r\n                                    return 0;\r\n                                });\r\n\r\n                                updateSortedUsers(updateSort);\r\n                            }}\r\n                        >\r\n                            First &#9660;\r\n            </th>\r\n\r\n                        <th\r\n                            scope='col'\r\n                            // on click funtion to sort users\r\n                            onClick={() => {\r\n                                const usersCopy = [...users];\r\n                                const updateSort = usersCopy.sort((a, b) => {\r\n                                    const nameA = a.name.last;\r\n                                    const nameB = b.name.last;\r\n\r\n                                    if (nameA < nameB) {\r\n                                        return -1;\r\n                                    }\r\n                                    if (nameA > nameB) {\r\n                                        return 1;\r\n                                    }\r\n\r\n                                    return 0;\r\n                                });\r\n\r\n                                updateSortedUsers(updateSort);\r\n                            }}\r\n                        >\r\n                            Last &#9660;\r\n            </th>\r\n                        <th scope='col'>gender</th>\r\n                        <th scope='col'>email</th>\r\n                        <th scope='col'>phone</th>\r\n                        <th scope='col'>cell</th>\r\n                        <th scope='col'>city</th>\r\n                        <th scope='col'>state</th>\r\n                        <th scope='col'>country</th>\r\n                        <th scope='col'>postcode</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sortedUsers.map(\r\n                        ({\r\n                            location: { city, state, country, postcode },\r\n                            picture: { thumbnail },\r\n                            cell,\r\n                            phone,\r\n                            gender,\r\n                            email,\r\n                            name: { first, last, title }\r\n                        }) => (\r\n                            <tr key={email}>\r\n                                <td>\r\n                                    <img src={thumbnail} />\r\n                                </td>\r\n                                <td>{title}</td>\r\n                                <th>{first}</th>\r\n                                <th>{last}</th>\r\n                                <td>{gender}</td>\r\n                                <td>{email}</td>\r\n                                <td>{phone}</td>\r\n                                <td>{cell}</td>\r\n                                <td>{city}</td>\r\n                                <td>{state}</td>\r\n                                <td>{country}</td>\r\n                                <td>{postcode}</td>\r\n\r\n                                <td></td>\r\n                            </tr>\r\n                        )\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","/* eslint-disable react/style-prop-object */\r\nimport React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\n\r\nconst pStyle = {\r\n    color: 'black'\r\n}\r\n\r\nconst Jumbotronheader = (props) => {\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container fluid>\r\n                    <h1 className='display-3' style={pStyle}>Employee Directory</h1>\r\n                    <p className='lead' style={pStyle}>\r\n                        Welcome to the Employee Directory for AIRSHOTS.LLC. Please\r\n                        feel free to look at are Employee's.\r\n                    </p>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Jumbotronheader;","import React, { useEffect, useState } from 'react';\nimport Container from './component/Container.jsx';\nimport FilterInput from './component/FilterInput.jsx';\nimport Table from './component/Table.jsx';\nimport Jumbotronheader from './component/Jumbotron.jsx';\nimport { getUsers } from './utils/API.jsx';\nimport './App.css';\n\nfunction App() {\n  const [initialUsers, updateAvailableUsers] = useState([]);\n  const [usersToRender, updateUsersToRender] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n  }, []);\n\n  return (\n    <Container fluid={true}>\n      <Jumbotronheader />\n      <div className='App'>\n        <p>Search by First Name!</p>\n        <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n\n        <Table users={usersToRender} dark={true} />\n      </div>\n    </Container>\n  );\n}\n\nexport default App;","// eslint-disable-next-line no-unused-vars\r\nimport axios from 'axios';\r\n\r\nexport const getUsers = function () {\r\n    return axios.get('https://randomuser.me/api/?results=10&nat=us')\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}